name: CI
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system deps (optional)
        run: sudo apt-get update

      - name: Install project (dev)
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -c constraints.txt
          pip install -e .
      - name: Lint
        run: . .venv/bin/activate && make lint

      - name: Tests (fail under 80% coverage)
        run: . .venv/bin/activate && pytest -q --maxfail=1 --disable-warnings --cov=estoque --cov-report=xml --cov-fail-under=80

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  lock-verify-migrate:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install with constraints (lock verify)
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt -c constraints.txt
          pip install -e .

      - name: Migrate + smoke CLI
        env:
          DB: ci.sqlite
        run: |
          . .venv/bin/activate
          make migrate DB=$DB
          # smoke: ruptura (sem dados, só sanity de execução)
          python app.py rel ruptura --horizonte-dias 5 --db $DB

  security-audit:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
      - name: Audit (fail on high/critical)
        run: |
          pip-audit -r requirements.txt -l -s medium
          # Para bloquear apenas High/Critical use:
          # pip-audit -r requirements.txt --severity high --strict

  secrets-scan:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
      - uses: actions/checkout@v4
      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git -v
